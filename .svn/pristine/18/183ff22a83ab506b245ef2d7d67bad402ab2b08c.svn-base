<?php

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Basic authentication steps definitions.
 *
 * @package    local_eudecustom
 * @category   test
 * @copyright  2017 Planificacion de Entornos Tecnologicos SL
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

// NOTE: no MOODLE_INTERNAL test here, this file may be required by behat before including /config.php.

require_once(__DIR__ . '/../../../../lib/behat/behat_base.php');

use Behat\Behat\Context\Step\Given as Given;
use Behat\Behat\Context\Step\When as When;

/**
 * Log in log out steps definitions.
 *
 * @package    local_eudecustom
 * @category   test
 * @copyright  2017 Planificacion de Entornos Tecnologicos SL
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
class behat_local extends behat_base {
    
    
    /**
     * Opens Moodle intensives page.
     *
     * @Given /^I go to intensives$/
     */
    public function i_go_to_intensives() {
        $this->getSession()->visit($this->locate_path('/local/eudecustom/eudeprofile.php'));
    }

    /**
     * Add local_eudecustom_call_dates data.
     *
     * @Given /^Add dates$/
     */
    public function add_dates() {
        global $DB;
        
        $today = time();
        
        $record = new stdClass();
        $record->courseid = 154003;
        $record->fecha1 = time() - 604800;
        $record->fecha2 = time() + 604800;
        $record->fecha3 = time() + 1280000;
        $record->fecha4 = time() + 3800000;
        $DB->insert_record('local_eudecustom_call_date', $record, false);
        
        $record2 = new stdClass();
        $record2->courseid = 154004;
        $record2->fecha1 = time();
        $record2->fecha2 = time() + 704800;
        $record2->fecha3 = time() + 1704800;
        $record2->fecha4 = time() + 2804800;
        $DB->insert_record('local_eudecustom_call_date', $record2, false);
    }
    
    /**
     * @when /^I confirm alert$/
     */
    public function acceptConfirmation() {
        $this->getSession()->getDriver()->executeScript('window.alert = function(){return true;}');
    }
    
    /**
     * @when /^I add intensive enrols$/
     */
    public function intensive_enrols() {
        global $DB;
        $record = new stdClass();
        $record->user_email = "student1@example.com";
        $record->course_category = 2;
        $record->num_intensive = 1;
        $DB->insert_record('local_eudecustom_user', $record, false);
        
        $today = time();
        $record2 = new stdClass();
        $record2->user_email = "student1@example.com";
        $record2->course_shortname = "MI.C1";
        $record2->matriculation_date = time() - 80000;
        $record2->conv_number = 2;
        $DB->insert_record('local_eudecustom_mat_int', $record2, false);
        
        $record3 = new stdClass();
        $record3->user_email = "student3@example.com";
        $record3->course_category = 2;
        $record3->num_intensive = 2;
        $DB->insert_record('local_eudecustom_user', $record3, false);
        
        $record4 = new stdClass();
        $record4->user_email = "student3@example.com";
        $record4->course_shortname = "MI.C1";
        $record4->matriculation_date = time() - 604800;
        $record4->conv_number = 1;
        $DB->insert_record('local_eudecustom_mat_int', $record4, false);
        
        $record5 = new stdClass();
        $record5->user_email = "student3@example.com";
        $record5->course_shortname = "MI.C1";
        $record5->matriculation_date = time() + 3800000;
        $record5->conv_number = 4;
        $DB->insert_record('local_eudecustom_mat_int', $record5, false);
        
        // Require a timestart on user_enrolment table to test editing data.
        
        $enroldata = new StdClass();
        $enroldata = $DB->get_record('user_enrolments', array('id' => 403004));
        $enroldata->timestart = time() + 3800000;
        
        $DB->update_record('user_enrolments', $enroldata, false);
        
    }
    
    /**
     * Click on the element with the provided xpath query
     *
     * @When /^I click on the element with xpath "([^"]*)"$/
     */
    public function iClickOnTheElementWithXPath($xpath)
    {
        $session = $this->getSession(); // get the mink session
        $element = $session->getPage()->find(
            'xpath',
            $session->getSelectorsHandler()->selectorToXpath('xpath', $xpath)
        ); // runs the actual query and returns the element
 
        // errors must not pass silently
        if (null === $element) {
            throw new \InvalidArgumentException(sprintf('Could not evaluate XPath: "%s"', $xpath));
        }
        
        // ok, let's click on it
        $element->click();
 
    }

}
